from django.test import LiveServerTestCase
from selenium.webdriver.firefox.webdriver import WebDriver
from selenium.webdriver.support.ui import Select
import time
import logging


class DjangoSeleniumTest(LiveServerTestCase):
    """ Base class for the django selenium testing """

    @classmethod
    def setUpClass(cls):
        cls.driver = WebDriver()
        super(DjangoSeleniumTest, cls).setUpClass()

    @classmethod
    def tearDownClass(cls):
        super(DjangoSeleniumTest, cls).tearDownClass()
        cls.driver.quit()


class SeleniumTestCase(DjangoSeleniumTest):
    """ Planner selenium test """
    fixtures = ['test_data.json']

    def test_make_one_appointment(self):
        """ Makes one appointment and verifies that the details are the listing for the drivers """
        driver = self.driver
        driver.get(self.live_server_url + "/accounts/login/?next=/main/region/20130101")
        driver.find_element_by_id("id_username").clear()
        driver.find_element_by_id("id_username").send_keys("steven")
        driver.find_element_by_id("id_password").clear()
        driver.find_element_by_id("id_password").send_keys("jansteven")
        driver.find_element_by_css_selector("input[type=\"submit\"]").click()
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text("11 January Friday : 9 - 12")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Frederik Jansen")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AB")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Bijlmerdreef")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("144")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-123456")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Bed, boeken en servies")
        driver.find_element_by_id("id_notes").clear()
        driver.find_element_by_id("id_notes").send_keys("Lift aanwezig")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        driver.find_element_by_link_text("Display collect list").click()
        time.sleep(2)
        driver.find_element_by_id("id_date").clear()
        driver.find_element_by_id("id_date").send_keys("2013-01-11")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        driver.find_element_by_link_text("Zuid-Oost").click()
        time.sleep(2)
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"1102AB")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Lift aanwezig")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"144")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"020-123456")

    def test_make_four_appointments(self):
        """ Make four appointments in the same timeslot, region and date to see that that date is no longer 
            suggested """
        driver = self.driver
        driver.get(self.live_server_url + "/accounts/login/?next=/main/region/20130101")
        driver.find_element_by_id("id_username").clear()
        driver.find_element_by_id("id_username").send_keys("steven")
        driver.find_element_by_id("id_password").clear()
        driver.find_element_by_id("id_password").send_keys("jansteven")
        driver.find_element_by_css_selector("input[type=\"submit\"]").click()
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text("11 January Friday : 9 - 12")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Frederik Jansen")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AB")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Bijlmerdreef")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("144")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-123456")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Bed, boeken en servies")
        driver.find_element_by_id("id_notes").clear()
        driver.find_element_by_id("id_notes").send_keys("Lift aanwezig")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        driver.get(self.live_server_url + "/main/region/20130101")
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text("11 January Friday : 9 - 12")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Mark de Jong")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AT")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Ken Saro-Wiwastraat")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("21")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-654321")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Speelgoed en ikea meubel")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Speelgoed en ikea meubel")
        driver.get(self.live_server_url + "/main/region/20130101")
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text("11 January Friday : 9 - 12")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Lidia van de Heuvel")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AX")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Raoul Wallenbergstraat")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("17")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-654321")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Speelgoed, kastjes en bank")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Speelgoed, kastjes en bank")
        driver.get(self.live_server_url + "/main/region/20130101")
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text("11 January Friday : 9 - 12")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Mirjam de Leeuw")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102ZA")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Chestertonlaan")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("17")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-654321")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Dozen met kleren")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Dozen met kleren")
        driver.find_element_by_link_text("Display collect list").click()
        time.sleep(2)
        driver.find_element_by_id("id_date").clear()
        driver.find_element_by_id("id_date").send_keys("2013-01-11")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        driver.find_element_by_link_text("Zuid-Oost").click()
        time.sleep(2)
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"1102AB")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Lift aanwezig")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"144")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"020-123456")
        driver.get(self.live_server_url + "/main/region/20130101")
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        try:
            self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"11 January Friday : 9 - 12")
            raise Exception()
        except  Exception:
            pass