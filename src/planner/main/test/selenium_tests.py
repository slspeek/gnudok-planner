from __future__ import absolute_import
from django.test import LiveServerTestCase
from selenium.webdriver.firefox.webdriver import WebDriver
from selenium.webdriver.support.ui import Select

import time
from .__init__ import RegionFactory, TimeSlotFactory, CarFactory, RuleFactory
import os
from nose.plugins.attrib import attr

VRIJDAG_11JAN = "11 January : Vrijdag :  13 - 16 - Zeeburg"
OPHAALDAG = 'Ophaal lijst per dag'
VRIJDAG_04JAN = "04 January : Vrijdag : 9 - 12 - Zeeburg"

 
class DjangoSeleniumTest(LiveServerTestCase):
    """ Base class for the django selenium testing """

    @classmethod
    def setUpClass(cls):
        cls.driver = WebDriver()
        super(DjangoSeleniumTest, cls).setUpClass()

    @classmethod
    def tearDownClass(cls):
        super(DjangoSeleniumTest, cls).tearDownClass()
        cls.driver.quit()
        
    def sleep(self):
        amount = float(os.environ.get("TEST_PAUSE", failobj=2))
        time.sleep(amount)

@attr('selenium', 'big') 
class SeleniumTestCase(DjangoSeleniumTest):
    """ Planner selenium test """
    fixtures = ['test_data.json']
    
    def setUp(self):
        self.region = RegionFactory(name='Zuid-Oost', description='Zuid-Oost') 
        self.timeslot = TimeSlotFactory(day_of_week=5,begin=9.0,end=12.5)
        self.car = CarFactory(name='Zeeburg')
        self.rule = RuleFactory(timeslot=self.timeslot, car=self.car, region=self.region)

    @attr('make_one')
    def test_make_one_appointment(self):
        """ Makes one appointment and verifies that the details are shown in the listing for that car """
        driver = self.driver
        driver.get(self.live_server_url + "/accounts/login/?next=/main/region/20130101")
        driver.find_element_by_id("id_username").clear()
        driver.find_element_by_id("id_username").send_keys("steven")
        driver.find_element_by_id("id_password").clear()
        driver.find_element_by_id("id_password").send_keys("jansteven")
        driver.find_element_by_css_selector("input[type=\"submit\"]").click()
        self.sleep()
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost: Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text(VRIJDAG_11JAN)
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Frederik Jansen")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AB")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Bijlmerdreef")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("144")
        driver.find_element_by_id("id_additions").clear()
        driver.find_element_by_id("id_additions").send_keys("sous")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-7123456")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Bed, boeken en servies")
        driver.find_element_by_id("id_notes").clear()
        driver.find_element_by_id("id_notes").send_keys("Lift aanwezig")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        driver.find_element_by_link_text("Ophaal lijst per dag").click()
        self.sleep()
        driver.find_element_by_id("id_date").clear()
        driver.find_element_by_id("id_date").send_keys("04-01-2013 ")
        driver.find_element_by_id("title").click()
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_link_text("Zeeburg").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"1102AB")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Lift aanwezig")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"144")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"sous")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"020-7123456")
        
        
    def test_search_appointment(self):
        """ Makes one appointment and verifies that the details are the listing for the drivers """
        driver = self.driver
        driver.get(self.live_server_url + "/accounts/login/?next=/main/region/20130101")
        driver.find_element_by_id("id_username").clear()
        driver.find_element_by_id("id_username").send_keys("steven")
        driver.find_element_by_id("id_password").clear()
        driver.find_element_by_id("id_password").send_keys("jansteven")
        driver.find_element_by_css_selector("input[type=\"submit\"]").click()
        self.sleep()
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost: Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text(VRIJDAG_11JAN)
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Frederik Jansen")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AB")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Bijlmerdreef")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("144")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-7123456")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Bed, boeken en servies")
        driver.find_element_by_id("id_notes").clear()
        driver.find_element_by_id("id_notes").send_keys("Lift aanwezig")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        driver.find_element_by_link_text("Afspraak zoeken").click()
        self.sleep()        
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("frederik")
        driver.find_element_by_css_selector("button.btn").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        


    def test_make_four_appointments(self):
        """ Make four appointments in the same timeslot, region and date to see that that date is no longer 
            suggested """
        driver = self.driver
        driver.get(self.live_server_url + "/accounts/login/?next=/main/region/20130101")
        driver.find_element_by_id("id_username").clear()
        driver.find_element_by_id("id_username").send_keys("steven")
        driver.find_element_by_id("id_password").clear()
        driver.find_element_by_id("id_password").send_keys("jansteven")
        driver.find_element_by_css_selector("input[type=\"submit\"]").click()
        self.sleep()
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost: Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text(VRIJDAG_11JAN)
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_id("id_name").clear()
        
        driver.find_element_by_id("id_name").send_keys("Frederik Jansen")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AB")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Bijlmerdreef")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("144")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-7123456")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Bed, boeken en servies")
        driver.find_element_by_id("id_notes").clear()
        driver.find_element_by_id("id_notes").send_keys("Lift aanwezig")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        driver.get(self.live_server_url + "/main/region/20130101")
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost: Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text(VRIJDAG_11JAN)
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Mark de Jong")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AT")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Ken Saro-Wiwastraat")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("21")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-7654321")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Speelgoed en ikea meubel")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Speelgoed en ikea meubel")
        driver.get(self.live_server_url + "/main/region/20130101")
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost: Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text(VRIJDAG_11JAN)
        self.sleep()
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Lidia van de Heuvel")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AX")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Raoul Wallenbergstraat")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("17")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-7654321")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Speelgoed, kastjes en bank")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Speelgoed, kastjes en bank")
        driver.get(self.live_server_url + "/main/region/20130101")
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost: Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text(VRIJDAG_11JAN)
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Mirjam de Leeuw")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102ZA")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Chestertonlaan")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("17")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-7654321")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Dozen met kleren")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Dozen met kleren")
        driver.find_element_by_link_text(OPHAALDAG).click()
        self.sleep()
        driver.find_element_by_id("id_date").clear()
        driver.find_element_by_id("id_date").send_keys("04-01-2013 ")
        driver.find_element_by_id("title").click()
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_link_text("Zeeburg").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"1102AB")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Lift aanwezig")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"144")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"020-7123456")
        driver.get(self.live_server_url + "/main/region/20130101")
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost: Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        try:
            self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"11 January Friday : 9 - 12")
            raise Exception()
        except  Exception:
            pass
        driver.find_element_by_link_text("Overzicht").click()
        self.sleep()
        driver.get(self.live_server_url + "/main/week/1/0/20130101")
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"1102AB")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        
 
VR_11JAN="11 January : Vrijdag : 9 - 12 - Auto Zeeburg"
   
@attr('selenium', 'edit')
class EditTestCase(DjangoSeleniumTest):
    """ Planner selenium test """
    fixtures = ['test_data.json']
    
    def setUp(self):
        self.region = RegionFactory(name='Zuid-Oost', description='Zuid-Oost') 
        self.timeslot = TimeSlotFactory(day_of_week=5, begin=9.0, end=12.5)
        self.car = CarFactory(name='Zeeburg')
        self.rule = RuleFactory(timeslot=self.timeslot, car=self.car, region=self.region)
    
    def test_edit_appointment(self):
        """ Makes one appointment and edits that appointment."""
        driver = self.driver
        driver.get(self.live_server_url + "/accounts/login/?next=/main/region/20130101")
        driver.find_element_by_id("id_username").clear()
        driver.find_element_by_id("id_username").send_keys("steven")
        driver.find_element_by_id("id_password").clear()
        driver.find_element_by_id("id_password").send_keys("jansteven")
        driver.find_element_by_css_selector("input[type=\"submit\"]").click()
        self.sleep()
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost: Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text(VRIJDAG_04JAN)
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Frederik Jansen")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AB")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Bijlmerdreef")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("144")
        driver.find_element_by_id("id_additions").clear()
        driver.find_element_by_id("id_additions").send_keys("sous")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-7123456")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Bed, boeken en servies")
        driver.find_element_by_id("id_notes").clear()
        driver.find_element_by_id("id_notes").send_keys("Lift aanwezig")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        # Appointment has been saved
        driver.find_element_by_link_text("Afspraak zoeken").click()
        self.sleep()        
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("frederik")
        driver.find_element_by_css_selector("button.btn").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"4 januari")
        #driver.find_element_by_link_text("Edit").click()
        driver.get(self.live_server_url + "/main/app/edit/1/20130101")
        self.sleep()
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Bed, boeken, servies en magnetron")
        self.sleep()
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken, servies en magnetron")
        
        driver.get(self.live_server_url + "/main/app/edit/1/20130101")
        self.sleep()
        #Select(driver.find_element_by_id("free_space")).select_by_visible_text("11 January : Friday :  9 - 12 - Zeeburg")
        #Select(driver.find_element_by_id("free_space")).select_by_visible_text(VR_11JAN)
        Select(driver.find_element_by_id("free_space")).select_by_visible_text("11 January : Vrijdag : 9 - 12 - Zeeburg")

        self.sleep()
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken, servies en magnetron")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"11 januari")
    
    def test_edit_big_appointment(self):
        """ Makes one big appointment and edits that appointment."""
        driver = self.driver
        driver.get(self.live_server_url + "/accounts/login/?next=/main/region/20130101")
        driver.find_element_by_id("id_username").clear()
        driver.find_element_by_id("id_username").send_keys("steven")
        driver.find_element_by_id("id_password").clear()
        driver.find_element_by_id("id_password").send_keys("jansteven")
        driver.find_element_by_css_selector("input[type=\"submit\"]").click()
        self.sleep()
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost: Zuid-Oost")
        Select(driver.find_element_by_id("id_weight")).select_by_visible_text("Een dagdeel")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text(VRIJDAG_04JAN)
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Frederik Jansen")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AB")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Bijlmerdreef")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("144")
        driver.find_element_by_id("id_additions").clear()
        driver.find_element_by_id("id_additions").send_keys("sous")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-7123456")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Bed, boeken en servies")
        driver.find_element_by_id("id_notes").clear()
        driver.find_element_by_id("id_notes").send_keys("Lift aanwezig")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        # Appointment has been saved
        driver.find_element_by_link_text("Afspraak zoeken").click()
        self.sleep()        
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("frederik")
        driver.find_element_by_css_selector("button.btn").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"4 januari")
        #driver.find_element_by_link_text("Edit").click()
        driver.get(self.live_server_url + "/main/app/edit/1/20130101")
        self.sleep()
        driver.find_element_by_id("id_stuff").clear()
        self.sleep()
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_id("id_stuff").send_keys("Bed, boeken, servies en magnetron")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken, servies en magnetron")
        
        driver.get(self.live_server_url + "/main/app/edit/1/20130101")
        self.sleep()
        #Select(driver.find_element_by_id("free_space")).select_by_visible_text("11 January : Friday :  9 - 12 - Zeeburg")
#        Select(driver.find_element_by_id("free_space")).select_by_visible_text(VR_11JAN)
        Select(driver.find_element_by_id("free_space")).select_by_visible_text("11 January : Vrijdag : 9 - 12 - Zeeburg")

        self.sleep()
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken, servies en magnetron")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"11 januari")  
            

@attr('selenium', 'viewers')
class ViewersTestCase(DjangoSeleniumTest):
    """ Planner selenium test """
    fixtures = ['test_data.json']
    
    def setUp(self):
        self.region = RegionFactory(name='Zuid-Oost', description='Zuid-Oost') 
        self.timeslot = TimeSlotFactory(day_of_week=5, begin=9.0, end=12.5)
        self.car = CarFactory(name='Zeeburg')
        self.rule = RuleFactory(timeslot=self.timeslot, car=self.car, region=self.region)
    
    def test_view_one_appointment(self):
        """ Makes one appointment and edits that appointment."""
        driver = self.driver
        driver.get(self.live_server_url + "/accounts/login/?next=/main/region/20130101")
        driver.find_element_by_id("id_username").clear()
        driver.find_element_by_id("id_username").send_keys("steven")
        driver.find_element_by_id("id_password").clear()
        driver.find_element_by_id("id_password").send_keys("jansteven")
        driver.find_element_by_css_selector("input[type=\"submit\"]").click()
        self.sleep()
        Select(driver.find_element_by_id("id_region")).select_by_visible_text("Zuid-Oost: Zuid-Oost")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        Select(driver.find_element_by_name("free_space")).select_by_visible_text(VRIJDAG_04JAN)
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        driver.find_element_by_id("id_name").clear()
        driver.find_element_by_id("id_name").send_keys("Frederik Jansen")
        driver.find_element_by_id("id_postcode").clear()
        driver.find_element_by_id("id_postcode").send_keys("1102AB")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("Bijlmerdreef")
        driver.find_element_by_id("id_town").clear()
        driver.find_element_by_id("id_town").send_keys("Amsterdam-Zuidoost")
        driver.find_element_by_id("id_number").clear()
        driver.find_element_by_id("id_number").send_keys("144")
        driver.find_element_by_id("id_additions").clear()
        driver.find_element_by_id("id_additions").send_keys("sous")
        driver.find_element_by_id("id_phone").clear()
        driver.find_element_by_id("id_phone").send_keys("020-7123456")
        driver.find_element_by_id("id_stuff").clear()
        driver.find_element_by_id("id_stuff").send_keys("Bed, boeken en servies")
        driver.find_element_by_id("id_notes").clear()
        driver.find_element_by_id("id_notes").send_keys("Lift aanwezig")
        driver.find_element_by_css_selector("button.btn.btn-primary").click()
        self.sleep()
        # Appointment has been saved
        driver.get(self.live_server_url + "/accounts/logout/")
        driver.find_element_by_id("id_username").clear()
        driver.find_element_by_id("id_username").send_keys("alien")
        driver.find_element_by_id("id_password").clear()
        driver.find_element_by_id("id_password").send_keys("jansteven")
        driver.find_element_by_css_selector("input[type=\"submit\"]").click()
        self.sleep()
        driver.get(self.live_server_url + "/main/week/1/0/20130101")
        self.sleep()
        driver.find_element_by_link_text("Vrijdag 4 jan").click()
        self.sleep()
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Frederik Jansen")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"Bed, boeken en servies")
        self.assertRegexpMatches(driver.find_element_by_css_selector("BODY").text, r"4 januari")
            
